#–∫–æ–º–∞–Ω–¥–∞ python manage.py delete_news_from_category "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"

from django.core.management.base import BaseCommand
from news.models import Post, Category


class Command(BaseCommand):
    help = '–£–¥–∞–ª—è–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏/—Å—Ç–∞—Ç—å–∏ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ ID'

    def add_arguments(self, parser):
        parser.add_argument('category', help='–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ ID')
        parser.add_argument(
            '--post-type',
            type=str,
            choices=['news', 'articles', 'all'],
            default='news',
            help='–¢–∏–ø –ø–æ—Å—Ç–æ–≤: news (–Ω–æ–≤–æ—Å—Ç–∏), articles (—Å—Ç–∞—Ç—å–∏), all (–≤—Å–µ)'
        )
        parser.add_argument(
            '--force',
            action='store_true',
            help='–£–¥–∞–ª–∏—Ç—å –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'
        )

    def handle(self, *args, **options):
        category_input = options['category']
        post_type = options['post_type']
        force = options['force']

        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é
            if category_input.isdigit():
                category = Category.objects.get(id=int(category_input))
            else:
                category = Category.objects.get(name=category_input)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ—Å—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if post_type == 'news':
                posts_query = Post.objects.filter(categories=category, post_type='NW')
                post_type_text = '–Ω–æ–≤–æ—Å—Ç–∏'
            elif post_type == 'articles':
                posts_query = Post.objects.filter(categories=category, post_type='AR')
                post_type_text = '—Å—Ç–∞—Ç—å–∏'
            else:  # all
                posts_query = Post.objects.filter(categories=category)
                post_type_text = '–ø–æ—Å—Ç–æ–≤'

            # –°—á–∏—Ç–∞–µ–º –ø–æ—Å—Ç—ã –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
            posts_count = posts_query.count()

            if posts_count == 0:
                self.stdout.write(
                    self.style.WARNING(
                        f'‚ö†Ô∏è –í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category.name}" –Ω–µ—Ç {post_type_text} –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è'
                    )
                )
                return

            # –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω --force)
            if not force:
                self.stdout.write(
                    self.style.WARNING(
                        f'üìä –ù–∞–π–¥–µ–Ω–æ {posts_count} {post_type_text} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category.name}"'
                    )
                )
                answer = input(f'‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏—Ö? (yes/no): ')

                if answer.lower() != 'yes':
                    self.stdout.write(self.style.ERROR('‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ'))
                    return

            # –£–¥–∞–ª—è–µ–º –ø–æ—Å—Ç—ã
            deleted_count, _ = posts_query.delete()

            self.stdout.write(
                self.style.SUCCESS(
                    f'‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} {post_type_text} –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category.name}"'
                )
            )

        except Category.DoesNotExist:
            self.stdout.write(self.style.ERROR(f'‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è "{category_input}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'))
            self.show_available_categories()

        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}'))

    def show_available_categories(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        self.stdout.write('\nüìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:')
        categories = [
            ('–°–ø–æ—Ä—Ç', 17),
            ('–ü–æ–ª–∏—Ç–∏–∫–∞', 18),
            ('–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', 19),
            ('–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', 20)
        ]

        for name, id in categories:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –±–∞–∑–µ
            try:
                category = Category.objects.get(id=id)
                news_count = Post.objects.filter(categories=category, post_type='NW').count()
                articles_count = Post.objects.filter(categories=category, post_type='AR').count()
                self.stdout.write(f'   - {name} (ID: {id}) | üì∞ –ù–æ–≤–æ—Å—Ç–µ–π: {news_count} | üìù –°—Ç–∞—Ç–µ–π: {articles_count}')
            except Category.DoesNotExist:
                self.stdout.write(f'   - {name} (ID: {id}) | ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ')